{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-client/add-client.component.css","webpack:///./src/app/components/add-client/add-client.component.html","webpack:///./src/app/components/add-client/add-client.component.ts","webpack:///./src/app/components/client-details/client-details.component.css","webpack:///./src/app/components/client-details/client-details.component.html","webpack:///./src/app/components/client-details/client-details.component.ts","webpack:///./src/app/components/clients/clients.component.css","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/edit-client/edit-client.component.css","webpack:///./src/app/components/edit-client/edit-client.component.html","webpack:///./src/app/components/edit-client/edit-client.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/page-not-found/page-not-found.component.css","webpack:///./src/app/components/page-not-found/page-not-found.component.html","webpack:///./src/app/components/page-not-found/page-not-found.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/app/services/settings.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <ng-flash-message></ng-flash-message>\\n  \\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport {RouterModule,Routes} from '@angular/router';\nimport {FormsModule} from '@angular/forms';\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\n\n\n//angularFire Imports\nimport{AngularFireModule} from 'angularfire2';\nimport {AngularFireDatabase} from 'angularfire2/database';\nimport {AngularFireAuth} from 'angularfire2/auth';\n//Components Imports\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\n\n//Service Imports\nimport {ClientService} from './services/client.service';\nimport {AuthService} from './services/auth.service';\nimport {AuthGuard} from './guards/auth.guard';\n\n\nexport const appRoutes:Routes  = [\n    {path:'',component:DashboardComponent, canActivate:[AuthGuard]},\n    {path:'register',component:RegisterComponent},\n    {path:'login',component:LoginComponent},\n    {path:'add-client',component:AddClientComponent, canActivate:[AuthGuard]},\n    {path:'client/:id',component:ClientDetailsComponent, canActivate:[AuthGuard]},\n    {path:'edit-client/:id',component:EditClientComponent, canActivate:[AuthGuard]},\n    {path:'settings',component:SettingsComponent, canActivate:[AuthGuard]},\n    {path:'**', component:PageNotFoundComponent},\n    \n];\n\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyBpjgEbTRrexx74teMg54hDYHXkIPNidUs\",\n  authDomain: \"clientpanel-8da7f.firebaseapp.com\",\n  databaseURL: \"https://clientpanel-8da7f.firebaseio.com\",\n \n  storageBucket: \"clientpanel-8da7f.appspot.com\",\n  messagingSenderId: \"611836031015\"\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    ClientsComponent,\n    ClientDetailsComponent,\n    AddClientComponent,\n    EditClientComponent,\n    NavbarComponent,\n    SidebarComponent,\n    LoginComponent,\n    RegisterComponent,\n    SettingsComponent,\n    PageNotFoundComponent,\n    \n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes,\n      { enableTracing: true }),\n    NgFlashMessagesModule.forRoot(),\n  \n    AngularFireModule.initializeApp(firebaseConfig)\n  ],\n  \n  providers: [\n    AuthGuard,\n    AngularFireAuth,\n    AngularFireDatabase,\n    ClientService,\n    AuthService,\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkLWNsaWVudC9hZGQtY2xpZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\"> \\n  <div class=\\\"col-md-6\\\">\\n   <a routerLink=\\\"/\\\" href=\\\"#\\\" class=\\\"btn btn-Link\\\" ><i class=\\\"fa fa-arrow-circle-o-left\\\"></i>Back To Dashboard</a>\\n  </div>\\n   <div class=\\\"col-md-6\\\">\\n     \\n   </div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n   <div class=\\\"card-header\\\">\\n     add Client\\n    </div>\\n    <div class=\\\"card-block\\\">\\n   \\n            <form novalidate #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n         \\n          <div class=\\\"form-group\\\">\\n         \\n            <label for=\\\"firstName\\\">firstName</label>\\n             <input \\n                type=\\\"text\\\" \\n                class=\\\"form-control\\\"\\n                [(ngModel)] =\\\"client.firstName\\\"\\n                name=\\\"firstName\\\"\\n                #clientFirstName=\\\"ngModel\\\"\\n                minlength=\\\"2\\\"\\n                required\\n             >\\n             <div *ngIf=\\\"clientFirstName.errors?.required && clientFirstName.touched\\\"\\n              class=\\\"alert alert-danger\\\">\\n               FirstName is required\\n             </div>\\n             <div *ngIf=\\\"clientFirstName.errors?.minlength && clientFirstName.touched\\\"\\n              class=\\\"alert alert-danger\\\">\\n               Must be at least  2 characters\\n             </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"lastName\\\">lastName</label>\\n               <input \\n                  type=\\\"text\\\" \\n                  class=\\\"form-control\\\"\\n                  [(ngModel)] =\\\"client.lastName\\\"\\n                  name=\\\"lastName\\\"\\n                  #clientLastName=\\\"ngModel\\\"\\n                  minlength=\\\"2\\\"\\n                  required\\n               >\\n               <div *ngIf=\\\"clientLastName.errors?.required && clientLastName.touched\\\"\\n                class=\\\"alert alert-danger\\\">\\n                 LastName is required\\n               </div>\\n               <div *ngIf=\\\"clientLastName.errors?.minlength && clientLastName.touched\\\"\\n                class=\\\"alert alert-danger\\\">\\n                 Must be at least  2 characters\\n               </div>\\n               </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"email\\\">Email</label>\\n                   <input \\n                      type=\\\"text\\\" \\n                      class=\\\"form-control\\\"\\n                      [(ngModel)] =\\\"client.email\\\"\\n                      name=\\\"email\\\"\\n                      #clientEmail=\\\"ngModel\\\"\\n                      minlength=\\\"2\\\"\\n                      required\\n                   >\\n                   <div *ngIf=\\\"clientEmail.errors?.required && clientEmail.touched\\\"\\n                    class=\\\"alert alert-danger\\\">\\n                     Email is required\\n                   </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"phone\\\">Phone</label>\\n                    <input \\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"client.phone\\\"\\n                      name=\\\"phone\\\"\\n                      #clientPhone=\\\"ngModel\\\"\\n                      minlength=\\\"10\\\"\\n                      required\\n                    >\\n                      \\n                       <div *ngIf=\\\"clientPhone.errors?.minlength && clientPhone.touched\\\" class=\\\"alert alert-danger\\\">\\n                          Add a valid phone number\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"balance\\\">Balance</label>\\n                         <input \\n                            type=\\\"number\\\" \\n                            class=\\\"form-control\\\"\\n                            [(ngModel)] =\\\"client.balance\\\"\\n                            name=\\\"balance\\\"\\n                            #clientPhone=\\\"ngModel\\\"\\n                            [disabled]=\\\"disableBalanceOnAdd\\\"\\n                         >\\n                   </div>\\n             <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Submit\\\">\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Client} from '../../models/Client';\nimport {ClientService} from '../../services/client.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport {Router} from '@angular/router';\nimport {SettingsService} from '../../services/settings.service';\n\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css']\n})\nexport class AddClientComponent implements OnInit {\n   client:Client = {\n    firstName:'',\n    lastName:'',\n    email:'',\n    phone:'',\n    balance:0\n  }\n  disableBalanceOnAdd:boolean = false;\n  constructor(\n     private ngFlashMessageService: NgFlashMessageService, \n     public router:Router,\n     public clientService:ClientService,\n     public settingsService:SettingsService,\n  ) { }\n\n  ngOnInit() {\n   // this.disableBalanceOnAdd = this.settingsService.getSettings().disableBalanceOnAdd;\n  }\n\n onSubmit({value,valid}:{value:Client,valid:boolean})\n {\n   if(this.disableBalanceOnAdd){\n      value.balance = 0;\n   }\n  if(!valid)\n  {\n     this.ngFlashMessageService.showFlashMessage({\n       // Array of messages each will be displayed in new line\n       messages: [\"please fill in all fields\"], \n       timeout: 4000,\n       \n       type: 'danger',\n    });\n   \n     this.router.navigate(['add-client']);\n   }\n   else\n   { \n       //Add new client\n       this.clientService.newClient(value);\n      // console.log(value)\n       this.ngFlashMessageService.showFlashMessage({\n      // Array of messages each will be displayed in new line\n      messages: [\"New Client  added\"], \n     \n      // Whether the flash can be dismissed by the user defaults to false\n      dismissible: true, \n      // Time after which the flash disappears defaults to 2000ms\n      timeout: 4000,\n      // Type of flash message, it defaults to info and success, warning, danger types can also be used\n      type: 'success',\n   });   \n        this.router.navigate(['/']);\n   }\n\n }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50LWRldGFpbHMvY2xpZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n   <div class=\\\"col-md-6\\\">\\n     <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\"><i class=\\\"fa fa-arrow-circle-o-left\\\"></i>Back To Dashboard</a>\\n   </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"btn-group pull-right\\\">\\n           <a [routerLink]=\\\"['/edit-client/'+id]\\\" class=\\\"btn btn-secondary\\\" >Edit</a>\\n           <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteClick()\\\">Delete</button>\\n        </div>\\n    </div>\\n</div>\\n<hr>\\n\\n<div *ngIf=\\\"client\\\" class=\\\"card\\\">\\n  <h3 class=\\\"card-header\\\">{{client.firstName}} {{client.lastName}}</h3>\\n  <div class=\\\"card-block\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-8\\\">\\n             <h4>Client ID:{{id}}</h4>\\n          </div>\\n           <div class=\\\"col-md-4\\\"> \\n             <!---Balance goes here---->\\n             <h3 class=\\\"pull-right\\\">\\n                 Balance:\\n                 <span\\n                  [class.text-danger]=\\\"hasBalance\\\"\\n                  [class.text-success]=\\\"!hasBalance\\\"\\n                 >\\n                 {{client.balance | currency:\\\"USD\\\":true}}\\n                 </span>\\n                <small>\\n                    <a (click)=\\\"showBalanceUpdateInput =!showBalanceUpdateInput\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n                </small>\\n             </h3>\\n             <div class=\\\"clearfix\\\">\\n                <form *ngIf=\\\"showBalanceUpdateInput\\\" (submit)=\\\"updateBalance(id)\\\" class=\\\"form-inline pull-right\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"client.balance\\\" name=\\\"balance\\\" class=\\\"form-control\\\">\\n                  </div>\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                </form>\\n              </div>\\n           </div> \\n      </div>\\n        <hr>\\n       <ul class=\\\"list-group\\\">\\n           <li class=\\\"list-group-item\\\">Contact Email:{{client.email}}</li>\\n           <li class=\\\"list-group-item\\\">Contact Phone:{{client.phone}}</li>\\n       </ul>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport{ClientService} from '../../services/client.service';\n//import {FlashMessagesService} from 'angular2-flash-messages';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport {Router,ActivatedRoute,Params} from '@angular/router';\nimport {Client} from '../../models/Client';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.css']\n})\nexport class ClientDetailsComponent implements OnInit {\nid:string;\nclient: Client;\nhasBalance:boolean = false;\nshowBalanceUpdateInput:boolean = false;\n\n  constructor(\n     public clientService:ClientService,\n     public router:Router,\n     public route:ActivatedRoute,\n     public ngFlashMessageService:NgFlashMessageService\n    // public flashMessagesService:FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    //Get ID\n    this.id = this.route.snapshot.params['id'];\n   // console.log(this.id);\n   //Get client\n       this.clientService.getClient(this.id).valueChanges().subscribe(client=>{\n        \n          if(client.balance > 0)\n            {\n             this.hasBalance = true;\n             }\n           this.client = client;\n       });\n  //   console.log(this.client);\n\n\n  }\n//updateBalance\n  updateBalance(id:string){\n    this.clientService.updateClient(this.id, this.client);\n      this.ngFlashMessageService.showFlashMessage({\n         messages: [\"Balance updated\"], timeout: 4000, type:'success',\n      });\n      this.router.navigate(['/client/'+this.id]);\n      console.log(this.client);\n  }\n\n//Delete client\nonDeleteClick(){\n    if(confirm(\"Are You sure to delete?\")){\n        this.clientService.deleteClient(this.id)\n        this.ngFlashMessageService.showFlashMessage({\n          messages: [\"Client Deleted\"], timeout: 4000, type:'success',\n       });\n       this.router.navigate(['/']);\n    }\n   \n     \n   }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50cy9jbGllbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n     <h2><i class=\\\"fa fa-users\\\"></i>Clients</h2>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n     <h5 class=\\\"pull-right text-muted\\\">total Owed:{{totalOwed | currency:\\\"USD\\\":true}}</h5>\\n  </div>\\n</div>\\n\\n<table *ngIf=\\\"clients?.length > 0;else noClients\\\" class=\\\"table table-striped\\\">\\n<thead class=\\\"thead-inverse\\\">\\n  <tr>\\n<th>ID</th>\\n<th>Name</th>\\n<th>LastName</th>\\n<th>Email</th>\\n<th>Balance</th>\\n<th></th>\\n  </tr>\\n</thead>\\n<tbody>\\n  <tr *ngFor=\\\"let client of clients\\\">\\n   <td>{{client.id}}</td>\\n   <td>{{client.firstName}}</td>\\n   <td>{{client.lastName}}</td>\\n   <td>{{client.email}}</td>\\n   <td>{{client.balance | currency:\\\"USD\\\":true}}</td>\\n   <td><a [routerLink] =\\\"['/client/'+client.id]\\\" href=\\\"\\\" class=\\\"btn btn-secondary btn-sm\\\"><i class=\\\"fa fa-arrow-circle-o-right\\\"></i> Details</a></td>\\n   \\n  </tr>\\n</tbody>\\n</table>\\n\\n<ng-template #noClients>\\n  <hr>\\n  <h5>there are no clients in the system</h5>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport {ClientService} from '../../services/client.service';\nimport {Client} from '../../models/Client';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.css']\n})\nexport class ClientsComponent implements OnInit {\nclients: any[];\ntotalOwed:number;\n  constructor(\n    public clientService:ClientService\n  ) { }\n\n  ngOnInit() {\n     this.clientService.getClients(clients =>{\n       this.clients = clients;\n       \n      for (let i=0; i < this.clients.length;i++) {\n       \n          console.log(this.clients[i]);\n         \n      }\n      this.gettotalOwed();\n     })\n\n  }\n\n  gettotalOwed(){\n   let total = 0;\n    for(let i =0; i<this.clients.length;i++)\n    {\n       total += parseFloat(this.clients[i].balance);\n    }\n    this.totalOwed = total;\n    console.log(this.totalOwed);\n  }\n\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-10\\\">\\r\\n    <app-clients></app-clients>   \\r\\n  </div>\\r\\n   <div class=\\\"col-md-2\\\">\\r\\n    <app-sidebar></app-sidebar>\\r\\n   </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n   let x = 8;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC1jbGllbnQvZWRpdC1jbGllbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\"> \\n  <div class=\\\"col-md-6\\\">\\n   <a [routerLink]=\\\"['/client/'+id]\\\" href=\\\"#\\\" class=\\\"btn btn-Link\\\" ><i class=\\\"fa fa-arrow-circle-o-left\\\"></i>Back To Details</a>\\n  </div>\\n   <div class=\\\"col-md-6\\\">\\n     \\n   </div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n   <div class=\\\"card-header\\\">\\n     Edit  Client\\n    </div>\\n    <div class=\\\"card-block\\\">\\n        <!-- <form novalidate #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\"> -->\\n            <form novalidate #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n         \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"firstName\\\">firstName</label>\\n             <input \\n                type=\\\"text\\\" \\n                class=\\\"form-control\\\"\\n                [(ngModel)] =\\\"client.firstName\\\"\\n                name=\\\"firstName\\\"\\n                #clientFirstName=\\\"ngModel\\\"\\n                minlength=\\\"2\\\"\\n                required\\n             >\\n             <div *ngIf=\\\"clientFirstName.errors?.required && clientFirstName.touched\\\"\\n              class=\\\"alert alert-danger\\\">\\n               FirstName is required\\n             </div>\\n             <div *ngIf=\\\"clientFirstName.errors?.minlength && clientFirstName.touched\\\"\\n              class=\\\"alert alert-danger\\\">\\n               Must be at least  2 characters\\n             </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"lastName\\\">lastName</label>\\n               <input \\n                  type=\\\"text\\\" \\n                  class=\\\"form-control\\\"\\n                  [(ngModel)] =\\\"client.lastName\\\"\\n                  name=\\\"lastName\\\"\\n                  #clientLastName=\\\"ngModel\\\"\\n                  minlength=\\\"2\\\"\\n                  required\\n               >\\n               <div *ngIf=\\\"clientLastName.errors?.required && clientLastName.touched\\\"\\n                class=\\\"alert alert-danger\\\">\\n                 LastName is required\\n               </div>\\n               <div *ngIf=\\\"clientLastName.errors?.minlength && clientLastName.touched\\\"\\n                class=\\\"alert alert-danger\\\">\\n                 Must be at least  2 characters\\n               </div>\\n               </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"email\\\">Email</label>\\n                   <input \\n                      type=\\\"text\\\" \\n                      class=\\\"form-control\\\"\\n                      [(ngModel)] =\\\"client.email\\\"\\n                      name=\\\"email\\\"\\n                      #clientEmail=\\\"ngModel\\\"\\n                      minlength=\\\"2\\\"\\n                      required\\n                   >\\n                   <div *ngIf=\\\"clientEmail.errors?.required && clientEmail.touched\\\"\\n                    class=\\\"alert alert-danger\\\">\\n                     Email is required\\n                   </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"phone\\\">Phone</label>\\n                    <input \\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"client.phone\\\"\\n                      name=\\\"phone\\\"\\n                      #clientPhone=\\\"ngModel\\\"\\n                      minlength=\\\"10\\\"\\n                      required\\n                    >\\n                      \\n                       <div *ngIf=\\\"clientPhone.errors?.minlength && clientPhone.touched\\\" class=\\\"alert alert-danger\\\">\\n                          Add a valid phone number\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"balance\\\">Balance</label>\\n                         <input \\n                            type=\\\"number\\\" \\n                            class=\\\"form-control\\\"\\n                            [(ngModel)] =\\\"client.balance\\\"\\n                            name=\\\"balance\\\"\\n                            #clientPhone=\\\"ngModel\\\"\\n                            [disabled]=\\\"disableBalanceOnEdit\\\"\\n                         >\\n                   </div>\\n             <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Submit\\\">\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport{ClientService} from '../../services/client.service';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport {Router,ActivatedRoute,Params} from '@angular/router';\nimport {Client} from '../../models/Client';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent implements OnInit {\nid:string;\nclient:Client ={\n       firstName:'',\n       lastName:'',\n       email:'',\n       phone:'',\n       balance : 0\n}\ndisableBalanceOnEdit:boolean = true;\n\n  constructor(\n    private ngFlashMessageService: NgFlashMessageService, \n    public router:Router,\n    public clientService:ClientService,\n    public route:ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n     this.id = this.route.snapshot.params['id'];\n\n     this.clientService.getClient(this.id).valueChanges().subscribe(client=>{\n        \n      if(client.balance > 0)\n\n       this.client = client;\n       console.log(client);\n   });\n   \n  }\n\n  onSubmit({value,valid}:{value:Client,valid:boolean})\n  {\n  \n   if(!valid)\n   {\n      this.ngFlashMessageService.showFlashMessage({\n        messages: [\"please fill in all fields\"], \n        timeout: 4000,\n        \n        type: 'danger',\n     });\n    \n      this.router.navigate(['edit-client/'+this.id]);\n    }\n    //Update the client\n    else\n    { \n        this.clientService.updateClient(this.id,value);\n        this.ngFlashMessageService.showFlashMessage({\n       messages: [\"Client updated\"], \n       dismissible: true, \n       timeout: 4000,\n       type: 'success',\n    });   \n         this.router.navigate(['/client/'+this.id]);\n    }\n \n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 offset-md-3\\\">\\n     <div class=\\\"card\\\">\\n         <div class=\\\"card-block\\\">\\n           <img class=\\\"max-auto d-block\\\" src=\\\"/assets/img/logo.png\\\" alt=\\\"\\\">\\n             <h1 class=\\\"text-center\\\">Login</h1>\\n              <form (submit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"email\\\">Email</label>\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"email\\\">Password</label>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" required>\\n                  </div>\\n                   <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Submit\\\">\\n              </form>\\n         </div>\\n     </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n email:string;\n password:string;\n\n  constructor(\n     private authService:AuthService,\n     private router:Router,\n     private ngFlashMessageService: NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n  }\n  onSubmit(){\n   this.authService.login(this.email,this.password)\n   .then((res)=>{\n     \n    this.ngFlashMessageService.showFlashMessage({\n      // Array of messages each will be displayed in new line\n      messages: [\"you are logged in\"], timeout: 4000, type: 'success',\n    });\n    this.router.navigate(['/']);\n   })\n   .catch((err) =>{\n     this.ngFlashMessageService.showFlashMessage({ //err.messages,\n       // Array of messages each will be displayed in new line\n       messages: [err.message], timeout: 4000,type: 'danger',\n       });\n\n   })\n   \n }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-toggleable-md navbar-light bg-faded\\\">\\n  <div class=\\\"container\\\">\\n      <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">ClientPanel</a>\\n\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li *ngIf =\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/\\\">Dashboard</a>\\n          </li> \\n        </ul>    \\n\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li *ngIf=\\\"!isLoggedIn && showRegister\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/register\\\">Register</a>\\n          </li> \\n          <li *ngIf=\\\"!isLoggedIn && showRegister\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>\\n          </li> \\n          <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">{{loggedInUser}}</a>\\n          </li> \\n          <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/settings\\\">Register</a>\\n          </li>\\n        \\n          <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n          </li> \\n        </ul>   \\n      </div>\\n      </div>\\n    </nav>\\n    <br><br> \"","import { Component, OnInit } from '@angular/core';\nimport {NgFlashMessageService} from 'ng-flash-messages';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n//import 'rxjs/add/operator/map';\nimport {SettingsService} from '../../services/settings.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\nisLoggedIn:boolean;\nloggedInUser:string;\nshowRegister:boolean;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router,\n    private ngflashMessagesService:NgFlashMessageService,\n    private settingsService:SettingsService\n  ) { }\n\n  ngOnInit() {\n    \n     this.authService.getAuth(auth => {\n       if(auth){\n        this.isLoggedIn =true;\n         this.loggedInUser = auth.email;\n       }\n      else\n      {\n        \n        this.isLoggedIn = false;\n       }\n         this.showRegister = this.settingsService.getSettings().allowRegistration;\n     });\n  }\n\n  onLogoutClick(){\n    this.authService.logout()\n    {\n      this.ngflashMessagesService.showFlashMessage({\n        // Array of messages each will be displayed in new line\n        messages: [\"you are logged  out\"], timeout: 4000, type: 'success',\n      });\n        this.router.navigate(['/login']);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS1ub3QtZm91bmQvcGFnZS1ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>\\n  page-not-found \\n</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 offset-md-3\\\">\\n     <div class=\\\"card\\\">\\n         <div class=\\\"card-block\\\">\\n           <img class=\\\"max-auto d-block\\\" src=\\\"/assets/img/logo.png\\\" alt=\\\"\\\">\\n             <h1 class=\\\"text-center\\\">Redister</h1>\\n              <form (submit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"email\\\">Email</label>\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"email\\\">Password</label>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" required>\\n                  </div>\\n                   <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Submit\\\">\\n              </form>\\n         </div>\\n     </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgFlashMessageService } from 'ng-flash-messages';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\nemail:string;\npassword:string;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router,\n    private ngFlashMessageService: NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    this.authService.register(this.email,this.password)\n    .then((res) =>{\n\n      this.ngFlashMessageService.showFlashMessage({\n        // Array of messages each will be displayed in new line\n        messages: [\"New user registered\"], timeout: 4000, type: 'success',\n      });\n      this.router.navigate(['/']);\n     })\n     .catch((err) =>{\n       this.ngFlashMessageService.showFlashMessage({ //err.messages,\n         // Array of messages each will be displayed in new line\n         messages: [err.message], timeout: 4000,type: 'danger',\n         });\n         this.router.navigate(['/register']);\n    })\n   \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n   <div class=\\\"col-md-6 \\\" >\\n     <a routerLink=\\\"/\\\" class=\\\"btn btn-link\\\"><i class=\\\" fa fa-arrow-circle-o-left\\\"></i>Back To Dashboard</a>\\n   </div>\\n   <div class=\\\"col-md-6 \\\" >\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n   <h3 class=\\\"card-header\\\">\\n       Edit Settings\\n   </h3> \\n    <div class=\\\"card-block\\\">\\n       <form (submit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n             <label>Allow Registration</label>\\n             <input type=\\\"checkbox\\\" [checked]=\\\"settings.allowRegistration\\\" (change)=\\\"settings.allowRegistration = !settings.allowRegistration\\\" name=\\\"allowRegistration\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Disable Balance On Add</label>\\n            <input type=\\\"checkbox\\\" [checked]=\\\"settings.disableBalanceOnAdd\\\" (change)=\\\"settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\\\" name=\\\"disableBalanceOnAdd\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Disable Balance On Edit</label>\\n            <input type=\\\"checkbox\\\" [checked]=\\\"settings.disableBalanceOnEdit\\\" (change)=\\\"settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\\\" name=\\\"disableBalanceOnEdit\\\">\\n          </div>\\n          <input type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" value=\\\"Submit\\\">\\n       </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {SettingsService} from '../../services/settings.service';\nimport {Router} from '@angular/router';\nimport {NgFlashMessageService} from 'ng-flash-messages';\nimport {Settings} from '../../models/Settings';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n settings:Settings;\n\n  constructor(\n       private SettingsService:SettingsService,\n       private  router :Router,\n       private ngFlashMessageService:NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n   this.settings = this.SettingsService.getSettings();\n  }\n\n  onSubmit()\n  {\n    this.SettingsService.changeSettings(this.settings);\n    this.ngFlashMessageService.showFlashMessage({ \n      messages: ['Settings saved'], timeout: 4000,type: 'success',\n      });\n      this.router.navigate(['/settings']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<a routerLink=\\\"/add-client\\\" href=\\\"#\\\" class=\\\" btn btn-success btn-block\\\">\\n  <i class=\\\"fa fa-plus\\\"></i>Add New Client</a>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable,Component, OnInit} from '@angular/core';\r\nimport {CanActivate, Router} from '@angular/router';\r\n//import 'rxjs/ad/operator/map';\r\nimport {AngularFireAuth}  from 'angularfire2/auth';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n        private router:Router,\r\n        public afAuth:AngularFireAuth,\r\n        private authService:AuthService,                \r\n  ){ }\r\n\r\n   canActivate(): Observable<boolean>{\r\n\r\n    var subject = new Subject<boolean>();\r\n    this.afAuth.authState.subscribe(auth =>{\r\n    if(!auth){\r\n      subject.next(false);\r\n      this.router.navigate(['/login']);\r\n   }\r\n   else\r\n   { \r\n    subject.next(true);\r\n    }\r\n  });\r\n  return subject.asObservable();\r\n}\r\n\r\n//check that user is Authenticated or not\r\n// chechUserForAuthentication(callback:(data)=>void){\r\n//   this.afAuth.authState.subscribe(auth =>{\r\n   \r\n//     callback(auth);\r\n    \r\n//     });\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport {Observable} from \"rxjs\";\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  constructor(public afAuth:AngularFireAuth) { }\n\n  login(email:string,password:string){\n    \n       return new Promise((resolve,reject)=>{\n          this.afAuth.auth.signInWithEmailAndPassword(email,password)\n           .then(userData =>resolve(userData),\n           err =>reject(err));\n       });\n  }\n\n  //check user status\n  getAuth(callback:(data)=>void){\n       this.afAuth.authState.subscribe(auth =>{\n         callback(auth)\n        });\n  }\n  \n\n  //register\n  register(email:string,password:string){\n        return new Promise((resolve,reject)=>{\n            this.afAuth.auth.createUserWithEmailAndPassword(email,password)\n            .then(userData =>resolve(userData),\n            err=> reject(err))\n        })\n  }\n\n  //sign out\n  logout(){\n      this.afAuth.auth.signOut();\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from 'angularfire2/database';\nimport { Observable } from 'rxjs';\nimport {Client} from '../models/Client';\n\n@Injectable()\nexport class ClientService {\n   clients:  Client[];\n  client:AngularFireObject<Client>; \n  \n\n  constructor(public af:AngularFireDatabase) {\n     this.clients = [];\n   }\n\n   \n   getClients(callback: (data) => void){\n      this.af.list('/clients').valueChanges().subscribe(clients => {\n        callback(clients); \n    });\n   }\n\n   newClient(client:Client){\n    \n    const pushId = this.af.createPushId();\n    const item = { ...client, id: pushId };\n    \n    this.af.list('/clients').set(item.id, item);\n       console.log(client);\n   }\n\n getClient(id:string){\n   this.client = this.af.object('/clients/'+id) as AngularFireObject<Client>;\n   return this.client;\n }\n  \n updateClient(id:string,client:Client){\n    // return this.clients.update(id,client);\n    this.af.list('/clients').update(id,client);\n }\n\n deleteClient(id:string){\n  //  return this.clients.splice(\n      this.af.list('clients').remove(id);\n }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Settings} from '../models/Settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\nsettings:Settings = {\n  allowRegistration:true,\n  disableBalanceOnAdd:true,\n   isableBalanceOnEdit:true\n}\n  constructor() {\n    if(localStorage.getItem('settings') != null){\n      this.settings = JSON.parse(localStorage.getItem('settings'));\n    }\n   }\n\n  getSettings(){\n   return this.settings;\n  }\n \n  changeSettings(settings:Settings){\n        localStorage.setItem('settings',JSON.stringify (settings));\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}